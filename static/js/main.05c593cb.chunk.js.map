{"version":3,"sources":["components/assets/logo.png","components/Input.jsx","components/TextArea.jsx","components/Button.jsx","forms/FormContainerApplication.jsx","forms/FormContainerNomination.jsx","components/modal/modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","className","for","name","title","id","type","inputType","value","onChange","handleChange","placeholder","TextArea","rows","cols","Button","style","onClick","action","buttonStyle","margin","FormContainer","useState","email","setEmail","setName","phone","setPhone","city","setCity","description","setDescription","support","setSupport","counter","setCounter","handleSubmit","event","preventDefault","length","fetch","method","then","res","json","isInitialMount","useRef","useEffect","current","headers","Headers","body","JSON","stringify","alert","onSubmit","display","color","position","e","target","FormContainerNomination","companyName","setCompanyName","companyWebsite","setCompanyWebsite","contactPerson","setContactPerson","companyEmail","setCompanyEmail","companyPhone","setCompanyPhone","reason","setReason","company","website","Modal","App","src","Logo","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05c593cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4a5e5a83.png\";","import React from 'react';\n\n\nconst Input = (props) => {\n\t//console.log(props.value);\n\treturn (  \n  <div className=\"form-group\">\n    <label for={props.name} className=\"form-label\">{props.title}</label>\n    <input\n      className=\"form-control\"\n      id={props.name}\n      name={props.name}\n      type={props.inputType}\n      value={props.value}\n      onChange={props.handleChange}\n      placeholder={props.placeholder} \n      {...props} />\n  </div>\n)\n}\n\nexport default Input;","import React from 'react';\n\n\nconst TextArea = (props) => (  \n  <div className=\"form-group\">\n    <label className=\"form-label\">{props.title}</label>\n    <textarea\n      className=\"form-control\"\n      name={props.name}\n      rows={props.rows}\n      cols = {props.cols}\n      value={props.value}\n      onChange={props.handleChange}\n      placeholder={props.placeholder} />\n  </div>\n);\n\nexport default TextArea;","import React from 'react';\n\n\nconst Button = (props) => {\n\treturn(\n\t<button \n\t\tstyle= {props.style} \n\t\tclassName = {props.type==='primary'? 'btn btn-primary' : 'btn btn-secondary'}\n\t\tonClick= {props.action} > \n\t\t{props.title} \n\t</button>)\n}\n\n\nexport default Button;","import React, { useState, useEffect, useRef } from 'react';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button'\n\nconst FormContainer = (props) => {\n\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [city, setCity] = useState('')\n  const [description, setDescription] = useState('')\n  const [support, setSupport] = useState('')\n  const [counter, setCounter] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    email.length > 0 &&\n      fetch('https://afternoon-stream-92743.herokuapp.com/feature/counter/applications', {\n        method: 'GET'\n      })\n        .then(res => res.json())\n        .then(res => {\n          setCounter(res)\n        })\n  }\n\n  // USING useEffect ON UPDATE ONLY\n  const isInitialMount = useRef(true)\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      fetch('https://afternoon-stream-92743.herokuapp.com/feature/sendMail', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify({\n          type: 'application',\n          email: email,\n          name: name,\n          phone: phone,\n          city: city,\n          description: description,\n          support: support,\n          counter: counter\n        }),\n      })\n        .then(res => res.json())\n        .then(res => alert(res))\n    }\n  }, [counter])\n\n  return (\n    <form className=\"container-fluid\" onSubmit={handleSubmit}>\n      <h6 style={{ display: \"block\", color: \"black\", position: \"static\" }}>Cleantech Romanian 2020 Awards Candidates form</h6>\n      <Input inputType={'text'}\n        title={'Applicant name: '}\n        name={'name'}\n        value={name}\n        placeholder={'Name of the person submitting the application'}\n        //  handleChange = {this.handleInput}\n        onChange={(e) => setName(e.target.value)}\n      />\n\n      <Input inputType={'email'}\n        title={'Applicant email: '}\n        name={'email'}\n        value={email}\n        placeholder={'Enter your email'}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n\n      <Input inputType={'number'}\n        title={'Applicant phone: '}\n        name={'phone'}\n        value={phone}\n        placeholder={'Enter your phone'}\n        onChange={(e) => setPhone(e.target.value)}\n      />\n\n      <Input inputType={'text'}\n        title={'Enter your city: '}\n        name={'city'}\n        value={city}\n        placeholder={'Enter your city'}\n        onChange={(e) => setCity(e.target.value)}\n      />\n\n      <Input inputType={'text'}\n        title={'Support: '}\n        name={'email'}\n        value={support}\n        placeholder={'Precise the support required'}\n        onChange={(e) => setSupport(e.target.value)}\n      />\n\n      <TextArea\n        title={'Description:'}\n        rows={10}\n        value={description}\n        name={'Description'}\n        handleChange={(e) => setDescription(e.target.value)}\n        placeholder={'Description'}\n      />\n\n      <Button\n        action={handleSubmit}\n        type={'primary'}\n        title={'Submit'}\n        style={buttonStyle}\n      />\n    </form>\n  );\n}\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px'\n}\n\nexport default FormContainer;","import React, { useState, useEffect, useRef } from 'react';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button'\n\nconst FormContainerNomination = (props) => {\n\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [counter, setCounter] = useState('')\n  const [companyName, setCompanyName] = useState('')\n  const [companyWebsite, setCompanyWebsite] = useState('')\n  const [contactPerson, setContactPerson] = useState('')\n  const [companyEmail, setCompanyEmail] = useState('')\n  const [companyPhone, setCompanyPhone] = useState('')\n  const [reason, setReason] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    email.length > 0 &&\n      fetch('https://afternoon-stream-92743.herokuapp.com/feature/counter/nominations', {\n        method: 'GET'\n      })\n        .then(res => res.json())\n        .then(res => {\n          setCounter(res)\n        })\n  }\n\n  // USING useEffect ON UPDATE ONLY\n  const isInitialMount = useRef(true)\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false\n    } else {\n      fetch('https://afternoon-stream-92743.herokuapp.com/feature/sendMail', {\n        method: 'POST',\n        headers: new Headers({\n          'Content-Type': 'application/json'\n        }),\n        body: JSON.stringify({\n          type: 'nomination',\n          email: email,\n          name: name,\n          phone: phone,\n          company: {\n            name: companyName,\n            website: companyWebsite,\n            contactPerson: contactPerson,\n            email: companyEmail,\n            phone: companyPhone,\n            reason: reason\n          },\n          counter: counter\n        }),\n      })\n        .then(res => res.json())\n        .then(res => alert(res))\n    }\n  }, [counter])\n\n  return (\n    <form className=\"container-fluid\" onSubmit={handleSubmit}>\n      <h6 style={{ display: \"block\", color: \"black\", position: \"static\" }}> Cleantech Romanian 2020 Awards Application form</h6>\n      <Input inputType={'text'}\n        title={'Name: '}\n        name={'name'}\n        value={name}\n        placeholder={'Name of the person submitting the application'}\n        //  handleChange = {this.handleInput}\n        onChange={(e) => setName(e.target.value)}\n      />\n\n      <Input inputType={'email'}\n        title={'Email: '}\n        name={'email'}\n        value={email}\n        placeholder={'Enter your email'}\n        onChange={(e) => setEmail(e.target.value)}\n\n      />\n\n      <Input inputType={'number'}\n        title={'Phone number: '}\n        name={'phone'}\n        value={phone}\n        placeholder={'Enter your phone'}\n        onChange={(e) => setPhone(e.target.value)}\n      />\n\n      <Input inputType={'text'}\n        title={'Company name: '}\n        name={'companyName'}\n        value={companyName}\n        placeholder={'Enter here the name of the company you wish to nominate'}\n        onChange={(e) => setCompanyName(e.target.value)}\n      />\n\n      <Input inputType={'text'}\n        title={'Company website: '}\n        name={'companyWebsite'}\n        value={companyWebsite}\n        placeholder={'Enter here the website of the company you wish to nominate'}\n        onChange={(e) => setCompanyWebsite(e.target.value)}\n      />\n\n      <Input inputType={'text'}\n        title={'Contact person from the company: '}\n        name={'contactPerson'}\n        value={contactPerson}\n        placeholder={'Enter here the contact person of the company you wish to nominate'}\n        onChange={(e) => setContactPerson(e.target.value)}\n      />\n\n      <Input inputType={'email'}\n        title={'Company email: '}\n        name={'companyEmail'}\n        value={companyEmail}\n        placeholder={'Enter here the email of the company you wish to nominate'}\n        onChange={(e) => setCompanyEmail(e.target.value)}\n      />\n\n      <Input inputType={'number'}\n        title={'Company phone number: '}\n        name={'companyPhone'}\n        value={companyPhone}\n        placeholder={'Enter here the phone number of the company you wish to nominate'}\n        onChange={(e) => setCompanyPhone(e.target.value)}\n      />\n\n      <TextArea\n        title={'Reason for nomination:'}\n        rows={10}\n        value={reason}\n        name={'reason'}\n        handleChange={(e) => setReason(e.target.value)}\n        placeholder={'Reason for nomination'}\n      />\n\n      <Button\n        action={handleSubmit}\n        type={'primary'}\n        title={'Apply'}\n        style={buttonStyle}\n      />\n    </form>\n  );\n}\n\n\nconst buttonStyle = {\n  margin: '10px 10px 10px 10px'\n}\n\nexport default FormContainerNomination;","import React from 'react';\nimport FormContainer from '../../forms/FormContainerApplication';\nimport FormContainerNomination from '../../forms/FormContainerNomination'\nimport './modal.css'\n\nconst Modal = () => {\n        return (\n            <div className='container-btn'>\n                <div className=\"modal-container\">\n                    <input id=\"modal-toggle\" type=\"checkbox\" />\n                    <button className='button-1' >\n                        <h5>Application</h5>\n                        <p>If you have an cleantech idea that you’d like to turn into a project, please apply here. Send us an email specifying briefly :\n                            <li>the cleantech idea/ project</li>\n                            <li>the support you need (financial, operational, etc.)</li>\n                            <li>providing contact details where we can contact you</li>\n                        </p>\n                        <a>Click here!</a>\n                    </button>\n                    <div className=\"modal-backdrop\">\n                        <div className=\"modal-content\">\n                            <FormContainer />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"modal-container2\">\n                    <input id=\"modal-toggle\" type=\"checkbox\" />\n                    <button className='button-2'>\n                        <h5>Nomination</h5>\n                        <p>If you know a Romanian Company or a Foreign Company with offices in Romania what you believe is a model for cleantech technologies put in practice, please fill in the form below and send the nomination for Cleantech Romania 2020 Awards. It can very well be you company or the company you work for.\n                        </p>\n                        <a>Click here!</a>\n                    </button>\n                    <div className=\"modal-backdrop\">\n                        <div className=\"modal-content\">\n                            <FormContainerNomination />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default Modal;","import React, { Component } from 'react';\nimport './App.css';\nimport Logo from './components/assets/logo.png';\nimport Modal from './components/modal/modal'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <div className='menubar'></div>\n      <div className='half1'>\n        <div className='half2'>\n          <div className='div-container'>\n            <div className='imgsus'>\n              <div className='logo'> <img className='logoct' src={Logo} alt='logo'></img></div>\n              <h2>2020 Cleantech Romania Nominations</h2><br></br>\n              <h6>Your opportunity to tell us about the innovators with cleantech<br/> impact on Romanian market.</h6>\n              <Modal/>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}